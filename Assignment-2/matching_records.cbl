       IDENTIFICATION DIVISION.
       PROGRAM-ID. RECORDMATCHER.

       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT INPUT-FILE1 ASSIGN TO "File1.txt"
               ORGANIZATION IS LINE SEQUENTIAL.
           SELECT INPUT-FILE2 ASSIGN TO "File2.txt"
               ORGANIZATION IS LINE SEQUENTIAL.
           SELECT OUTPUT-FILE ASSIGN TO "File3.ps"
               ORGANIZATION IS LINE SEQUENTIAL.

       DATA DIVISION.
       FILE SECTION.
       FD INPUT-FILE1.
       01 INPUT1-RECORD.
          05 INPUT1-PREFIX  PIC X(12).
          05 INPUT1-PRIMARY-KEY  PIC X(8).
          05 INPUT1-SUFFIX  PIC X(60).

       FD INPUT-FILE2.
       01 INPUT2-RECORD.
          05 INPUT2-HEADER  PIC X(20).
          05 INPUT2-PRIMARY-KEY  PIC X(8).
          05 INPUT2-SUFFIX  PIC X(52).

       FD OUTPUT-FILE.
       01 OUTPUT-RECORD PIC X(80).

       WORKING-STORAGE SECTION.
       01 EOF-FILE1 PIC X VALUE 'N'.
       01 EOF-FILE2 PIC X VALUE 'N'.

       PROCEDURE DIVISION.
       MAIN-PROCEDURE.
           OPEN INPUT INPUT-FILE1
                INPUT INPUT-FILE2
                OUTPUT OUTPUT-FILE.

           PERFORM READ-INPUT1.
           PERFORM READ-INPUT2.

           PERFORM MATCH-RECORDS 
               UNTIL EOF-FILE1 = 'Y' OR EOF-FILE2 = 'Y'.

           CLOSE INPUT-FILE1 INPUT-FILE2 OUTPUT-FILE.

           STOP RUN.

       READ-INPUT1.
           READ INPUT-FILE1 AT END MOVE 'Y' TO EOF-FILE1.

       READ-INPUT2.
           READ INPUT-FILE2 AT END MOVE 'Y' TO EOF-FILE2.

       MATCH-RECORDS.
           IF INPUT1-PRIMARY-KEY = INPUT2-PRIMARY-KEY THEN
               MOVE INPUT1-RECORD TO OUTPUT-RECORD
               WRITE OUTPUT-RECORD
               PERFORM READ-INPUT1
               PERFORM READ-INPUT2
           ELSE
               IF INPUT1-PRIMARY-KEY < INPUT2-PRIMARY-KEY THEN
                   PERFORM READ-INPUT1
               ELSE
                   PERFORM READ-INPUT2.
